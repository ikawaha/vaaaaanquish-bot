// Code generated by goagen v1.1.0-dirty, command line:
// $ goagen
// --design=github.com/ikawaha/vaaaaanquish-bot/design
// --out=$(GOPATH)/src/github.com/ikawaha/vaaaaanquish-bot
// --version=v1.1.0-dirty
//
// API "vaaaaanquish-bot": Application Contexts
//
// The content of this file is auto-generated, DO NOT MODIFY

package app

import (
	"github.com/goadesign/goa"
	"golang.org/x/net/context"
)

// InboundMessageContext provides the message inbound action context.
type InboundMessageContext struct {
	context.Context
	*goa.ResponseData
	*goa.RequestData
	Payload *SlackMessage
}

// NewInboundMessageContext parses the incoming request URL and body, performs validations and creates the
// context used by the message controller inbound action.
func NewInboundMessageContext(ctx context.Context, service *goa.Service) (*InboundMessageContext, error) {
	var err error
	resp := goa.ContextResponse(ctx)
	resp.Service = service
	req := goa.ContextRequest(ctx)
	rctx := InboundMessageContext{Context: ctx, ResponseData: resp, RequestData: req}
	return &rctx, err
}

// OK sends a HTTP response with status code 200.
func (ctx *InboundMessageContext) OK(r *VaaaaanquishBotMessage) error {
	ctx.ResponseData.Header().Set("Content-Type", "application/vnd.vaaaaanquish.bot.message+json")
	return ctx.ResponseData.Service.Send(ctx.Context, 200, r)
}
